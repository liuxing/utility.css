// Flex
// ––––––––––––––––––––––––––––––––––––––––––––––––––

.flex {
  display: flex;
}

.flex-inline {
  display: inline-flex;
}

// Alignment

/*
 * Align items along the main axis of the current line of the flex container
 * Row: Horizontal
 */

.flex-left {
  justify-content: flex-start;
}

.flex-center {
  justify-content: center;
}

.flex-right {
  justify-content: flex-end;
}

.flex-between {
  justify-content: space-between;
}

.flex-around {
  justify-content: space-around;
}

.flex-stretch {
  align-items: stretch;
}

/*
 * Align items in the cross axis of the current line of the flex container
 * Row: Vertical
 */

.flex-top {
  align-items: flex-start;
}

.flex-middle {
  align-items: center;
}

.flex-bottom {
  align-items: flex-end;
}


// Direction

.flex-row {
  flex-direction: row;
}

.fle-row-reverse {
  flex-direction: row-reverse;
}

.flex-column {
  flex-direction: column;
}

.flex-column-reverse {
  flex-direction: column-reverse;
}


// Wrap

.flex-wrap {
  flex-wrap: wrap;
}

.flex-wrap {
  flex-wrap: nowrap;
}

.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

/*
 * Aligns items within the flex container when there is extra space in the cross-axis
 * Only works if there is more than one line of flex items
 */

 .flex-wrap-stretch {
  align-content: stretch;
}

.flex-wrap-top {
  align-content: flex-start;
}

.flex-wrap-middle {
  align-content: center;
}

.flex-wrap-bottom {
  align-content: flex-end;
}

.flex-wrap-between {
  align-content: space-between;
}

.flex-wrap-around {
  align-content: space-around;
}

.flex-self-auto {
  align-self: auto;
}

.flex-self-top {
  align-self: flex-start;
}

.flex-self-bottom {
  align-self: flex-end;
}

.flex-self-baseline {
  align-self: baseline;
}

.flex-self-stretch {
  align-self: stretch;
}

.flex-none {
  flex: none;
}

.flex-auto {
  flex: auto;
}

.flex-1{
  flex: 1;
}
